# version: "3"


volumes:
  mongodb:
  example-mongodb:

networks:
  finapp_net:
    driver: bridge

x-local_mounts: &local_mounts
  - .:/finapp

x-container_options: &container_options
  stdin_open: true # docker run -i
  tty: true        # docker run -t
  networks:
    - finapp_net

services:
  gui:
    image: citywideiowa0/finapp_gui
    container_name: gui
    build:
      context: .
      dockerfile: ./dockerfiles/gui_Dockerfile
    command: "streamlit run Home.py --server.port=8501 --server.allowRunOnSave=true --server.runOnSave=true --server.address=0.0.0.0"
    ports:
      - "80:8501" # Streamlit
    volumes: *local_mounts
    <<: *container_options

  manager:
    image: citywideiowa0/finapp_manager
    container_name: manager
    build:
      context: .
      dockerfile: ./dockerfiles/manager_Dockerfile
    command: uvicorn server:app --reload --host 0.0.0.0 --port 5000
    expose:
      - "5000"
    environment:
      - FLASK_DEBUG=1
    volumes: *local_mounts
    <<: *container_options

  db_connector:
    image: citywideiowa0/finapp_db_connector
    container_name: db_connector
    build:
      context: .
      dockerfile: ./dockerfiles/db_connector_Dockerfile
    command:  python3 -m flask run --host=0.0.0.0
    expose:
      - "5000" # Flask (DB Connector)
    environment:
      - FLASK_DEBUG=1
    volumes: *local_mounts
    <<: *container_options

###----- Shared/Base Services -----###

  plaid_base:
    image: citywideiowa0/finapp_plaid
    container_name: plaid
    build:
      context: .
      dockerfile: ./dockerfiles/plaid_Dockerfile
    command:  python3 -m flask run --host=0.0.0.0
    ports:
      - 5000:5000
    expose:
      - "5000" # Flask
    environment:
      - FLASK_DEBUG=1
      - PLAID_ENV=development
    profiles:
      - base
    volumes: *local_mounts
    <<: *container_options

  db_explorer_base:
    image: mongo-express
    container_name: db_explorer
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_PORT:27017
    networks:
      - finapp_net
    ports:
      - "8081:8081"
    profiles:
      - base

  db_base:
    image: mongo
    container_name: mongo
    networks:
      - finapp_net
    environment:
    - MONGO_INITDB_ROOT_USERNAME=rootuser
    - MONGO_INITDB_ROOT_PASSWORD=rootpass
    expose:
      - "27017"
    profiles:
      - base


###----- Prod Services -----###

  plaid:
    extends: plaid_base
    environment:
      - PLAID_ENV=development
      - PLAID_SECRET=4c45a3df6d7d8c6b5b72ee524f43f4
    profiles:
      - prod

  db_explorer:
    extends: db_explorer_base
    volumes:
      - 'mongodb:/data/db/'
    profiles:
      - prod
      
  db:
    extends: db_base
    volumes:
      - 'mongodb:/data/db/'
    profiles:
      - prod

###----- Dev Services -----###

  sandbox_plaid:
    extends: plaid_base
    environment:
      - PLAID_ENV=sandbox
      - PLAID_SECRET=8e34835101df4feee625c2e10810a0
    profiles:
      - dev
      - test
 
  dev_db_explorer:
    extends: db_explorer_base
    volumes:
      - 'example-mongodb:/data/db/'
    profiles:
      - dev
      - test
  
  example_db:
    extends: db_base
    volumes:
      - 'example-mongodb:/data/db/'
    profiles:
      - dev
      - test

  test:
    image: citywideiowa0/finapp_test
    build:
      context: .
      dockerfile: ./dockerfiles/test_Dockerfile
    restart: "no"
    container_name: test
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_PORT:27017
      - PLAID_ENV=sandbox
      - PLAID_SECRET=8e34835101df4feee625c2e10810a0
    depends_on:
      - sandbox_plaid
      - example_db
      - manager
      - db_connector
      - dev_db_explorer
    profiles:
      - test
    volumes: *local_mounts
    <<: *container_options